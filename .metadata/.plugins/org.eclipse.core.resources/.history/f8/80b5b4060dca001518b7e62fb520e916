#ifndef IAUTONOMUS_HPP
#define IAUTONOMUS_HPP

#include <Schematic.hpp>

using namespace std;

class IAutonomous {
private:
	string name;
	bool started;

public:
	IAutonomous(string autoName) {
		name = autoName;
		started = false;
	}

	bool AutonomousUpdate(double time)
	{
		if (!started)
		{
			Start();
			started = true;
		}
		else
		{
			bool running;

			if (time < 15 && started)
			{
				running = Run(time);
			}
			else
			{
				running = false;
			}

			if (!running)
			{
				Stop();
				started = false;
				return false;
			}
		}
	}

	virtual void Start() {}
	virtual bool Run(double time) {}
	virtual void Stop() {}

	inline string GetName() { return name; }
};

#endif
