// include header files
#include <DriveTrain.hpp>

// function that sets the speed of the motors
void DriveTrain::Drive()
{
	if (1 == 1)
	{
		double goalPosX = (goalTracker->GetGoalCenterX() / WEBCAM_PIXEL_WIDTH) * 2 - 1;
		visionPID->Enable();
		visionSource->SetPIDCenter(goalPosX);
		visionPID->SetSetpoint(0);
		currentSpeedLeft = visionOutput->GetOutput();
		SmartDashboard::PutNumber("Right Drive", visionOutput->GetOutput());
	}
	else
	{
		// Get the position of the left and right joysticks.
		currentSpeedLeft = joystick->GetRawAxis(DRIVE_AXIS_LEFT);
		currentSpeedRight = joystick->GetRawAxis(DRIVE_AXIS_RIGHT);

		// Deadband.
		if (fabs(currentSpeedLeft) < JOYSTICK_DEADBAND)
		{
			currentSpeedLeft = 0;
		}

		if (fabs(currentSpeedRight) < JOYSTICK_DEADBAND)
		{
			currentSpeedRight = 0;
		}

		// Ramping.
		DeltaSpeedLeft = currentSpeedLeft - OldSpeedLeft;
		DeltaSpeedLeft = currentSpeedRight - OldSpeedRight;
		LeftSign = currentSpeedLeft / fabs(currentSpeedLeft);
		RightSign = currentSpeedRight / fabs(currentSpeedRight);

		if (fabs(DeltaSpeedLeft) > DRIVE_RAMP_SPEED)
		{
			currentSpeedLeft = OldSpeedLeft + LeftSign * DRIVE_RAMP_SPEED;
		}

		if (fabs(DeltaSpeedRight) > DRIVE_RAMP_SPEED)
		{
			currentSpeedRight = OldSpeedRight + RightSign * DRIVE_RAMP_SPEED;
		}

		// Clamping.
		if (fabs(currentSpeedLeft) > 1)
		{
			currentSpeedLeft = LeftSign;
		}

		if (fabs(currentSpeedRight) > 1)
		{
			currentSpeedRight = RightSign;
		}

		// Log the left and right speeds.
		OldSpeedLeft = currentSpeedLeft;
		OldSpeedRight = currentSpeedRight;

		// Set the motors.
		leftDrive->SetSpeed(currentSpeedLeft);
		rightDrive->SetSpeed(-currentSpeedRight);
	}
}

