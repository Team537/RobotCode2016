// include header files
#include <DriveTrain.hpp>

// function that sets the speed of the motors
void DriveTrain::Drive()
{
	if (1 == 1)
	{
		double goalPosX = (GoalTracker->GetGoalCenterX() / WEBCAM_PIXEL_WIDTH) * 2 - 1;
		VisionPID->Enable();
		visionSource->SetPIDCenter(goalPosX);
		VisionPID->SetSetpoint(0);
		CurrentSpeedLeft = visionOutput->GetOutput();
		SmartDashboard::PutNumber("Right Drive", visionOutput->GetOutput());
	}
	else
	{
		// Get the position of the left and right joysticks.
		CurrentSpeedLeft = Joy->GetRawAxis(DRIVE_AXIS_LEFT);
		CurrentSpeedRight = Joy->GetRawAxis(DRIVE_AXIS_RIGHT);

		// Deadband.
		if (fabs(CurrentSpeedLeft) < JOYSTICK_DEADBAND)
		{
			CurrentSpeedLeft = 0;
		}

		if (fabs(CurrentSpeedRight) < JOYSTICK_DEADBAND)
		{
			CurrentSpeedRight = 0;
		}

		// Ramping.
		DeltaSpeedLeft = CurrentSpeedLeft - OldSpeedLeft;
		DeltaSpeedLeft = CurrentSpeedRight - OldSpeedRight;
		LeftSign = CurrentSpeedLeft / fabs(CurrentSpeedLeft);
		RightSign = CurrentSpeedRight / fabs(CurrentSpeedRight);

		if (fabs(DeltaSpeedLeft) > DRIVE_RAMP_SPEED)
		{
			CurrentSpeedLeft = OldSpeedLeft + LeftSign * DRIVE_RAMP_SPEED;
		}

		if (fabs(DeltaSpeedRight) > DRIVE_RAMP_SPEED)
		{
			CurrentSpeedRight = OldSpeedRight + RightSign * DRIVE_RAMP_SPEED;
		}

		// Clamping.
		if (fabs(CurrentSpeedLeft) > 1)
		{
			CurrentSpeedLeft = LeftSign;
		}

		if (fabs(CurrentSpeedRight) > 1)
		{
			CurrentSpeedRight = RightSign;
		}

		// Log the left and right speeds.
		OldSpeedLeft = CurrentSpeedLeft;
		OldSpeedRight = CurrentSpeedRight;

		// Set the motors.
		LeftDrive->SetSpeed(CurrentSpeedLeft);
		rightDrive->SetSpeed(-CurrentSpeedRight);
	}
}

