#ifndef SHOOTER_HPP
#define SHOOTER_HPP

#include <Schematic.hpp>
#include <DriveTrain/DriveTrain.hpp>
#include <Toolbox/RobotButton.hpp>
#include <Vision/Vision.hpp>

class Shooter : public IComponent
{
private:
	Vision *vision;
	DriveTrain *drive;

	CANTalon *spinTalon;
	Solenoid *extend;

	Timer *extendTimer;

	ShooterState state;
	RobotButton *shootButton;
	float spinSpeed;

public:
	enum ShooterState {
		NONE, SPINNING, FIRE, RETRACT
	};

	Shooter(Joystick *joystick, Vision *vision, DriveTrain *drive) : IComponent(joystick, new string("Shooter"))
	{
		this->vision = vision;
		this->drive = drive;

		spinTalon = new CANTalon(SHOOTER_SPIN_PORT);
		extend = new Solenoid(SHOOTER_EXTEND_PORT);

		extendTimer = new Timer();

		state = ShooterState::NONE;
		shootButton = new RobotButton(joystick, 10);
		spinSpeed = 0.0f;
	}

	void Update(bool teleop);
	void Dashboard();

	void Shoot();
	bool IsActivated();
};

#endif
